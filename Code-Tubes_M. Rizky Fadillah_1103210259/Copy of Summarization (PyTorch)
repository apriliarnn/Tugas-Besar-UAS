{"cells":[{"cell_type":"markdown","metadata":{"id":"Rqu8_x9gi8Tz"},"source":["# Summarization (PyTorch)"]},{"cell_type":"markdown","metadata":{"id":"JAMbzn40i8T2"},"source":["Install the Transformers, Datasets, and Evaluate libraries to run this notebook."]},{"cell_type":"code","execution_count":1,"metadata":{"id":"Mdd603xvi8T3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735998186228,"user_tz":-420,"elapsed":26206,"user":{"displayName":"M.Rizky Fadillah","userId":"02911994023466566780"}},"outputId":"e00b07eb-832e-42dd-8175-3705d7bb223b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting datasets\n","  Downloading datasets-3.2.0-py3-none-any.whl.metadata (20 kB)\n","Collecting evaluate\n","  Downloading evaluate-0.4.3-py3-none-any.whl.metadata (9.2 kB)\n","Requirement already satisfied: transformers[sentencepiece] in /usr/local/lib/python3.10/dist-packages (4.47.1)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from datasets) (3.16.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (1.26.4)\n","Requirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (17.0.0)\n","Collecting dill<0.3.9,>=0.3.0 (from datasets)\n","  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.2.2)\n","Requirement already satisfied: requests>=2.32.2 in /usr/local/lib/python3.10/dist-packages (from datasets) (2.32.3)\n","Requirement already satisfied: tqdm>=4.66.3 in /usr/local/lib/python3.10/dist-packages (from datasets) (4.67.1)\n","Collecting xxhash (from datasets)\n","  Downloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n","Collecting multiprocess<0.70.17 (from datasets)\n","  Downloading multiprocess-0.70.16-py310-none-any.whl.metadata (7.2 kB)\n","Collecting fsspec<=2024.9.0,>=2023.1.0 (from fsspec[http]<=2024.9.0,>=2023.1.0->datasets)\n","  Downloading fsspec-2024.9.0-py3-none-any.whl.metadata (11 kB)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.11.10)\n","Requirement already satisfied: huggingface-hub>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.27.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from datasets) (24.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (6.0.2)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]) (2024.11.6)\n","Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]) (0.21.0)\n","Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]) (0.4.5)\n","Requirement already satisfied: sentencepiece!=0.1.92,>=0.1.91 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]) (0.2.0)\n","Requirement already satisfied: protobuf in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]) (4.25.5)\n","Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (2.4.4)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.2)\n","Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.3)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (24.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.5.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.1.0)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (0.2.1)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.18.3)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.23.0->datasets) (4.12.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2024.12.14)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.17.0)\n","Downloading datasets-3.2.0-py3-none-any.whl (480 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m480.6/480.6 kB\u001b[0m \u001b[31m14.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading evaluate-0.4.3-py3-none-any.whl (84 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m84.0/84.0 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dill-0.3.8-py3-none-any.whl (116 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading fsspec-2024.9.0-py3-none-any.whl (179 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m179.3/179.3 kB\u001b[0m \u001b[31m13.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m10.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m15.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: xxhash, fsspec, dill, multiprocess, datasets, evaluate\n","  Attempting uninstall: fsspec\n","    Found existing installation: fsspec 2024.10.0\n","    Uninstalling fsspec-2024.10.0:\n","      Successfully uninstalled fsspec-2024.10.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","gcsfs 2024.10.0 requires fsspec==2024.10.0, but you have fsspec 2024.9.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed datasets-3.2.0 dill-0.3.8 evaluate-0.4.3 fsspec-2024.9.0 multiprocess-0.70.16 xxhash-3.5.0\n","Requirement already satisfied: accelerate in /usr/local/lib/python3.10/dist-packages (1.2.1)\n","Requirement already satisfied: numpy<3.0.0,>=1.17 in /usr/local/lib/python3.10/dist-packages (from accelerate) (1.26.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (24.2)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate) (5.9.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from accelerate) (6.0.2)\n","Requirement already satisfied: torch>=1.10.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (2.5.1+cu121)\n","Requirement already satisfied: huggingface-hub>=0.21.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (0.27.0)\n","Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.10/dist-packages (from accelerate) (0.4.5)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.0->accelerate) (3.16.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.0->accelerate) (2024.9.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.0->accelerate) (2.32.3)\n","Requirement already satisfied: tqdm>=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.0->accelerate) (4.67.1)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.21.0->accelerate) (4.12.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.10.0->accelerate) (3.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.10.0->accelerate) (3.1.4)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch>=1.10.0->accelerate) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch>=1.10.0->accelerate) (1.3.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.10.0->accelerate) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->huggingface-hub>=0.21.0->accelerate) (2024.12.14)\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","git-lfs is already the newest version (3.0.2-1ubuntu0.3).\n","0 upgraded, 0 newly installed, 0 to remove and 49 not upgraded.\n"]}],"source":["!pip install datasets evaluate transformers[sentencepiece]\n","!pip install accelerate\n","# To run the training on TPU, you will need to uncomment the following line:\n","# !pip install cloud-tpu-client==0.10 torch==1.9.0 https://storage.googleapis.com/tpu-pytorch/wheels/torch_xla-1.9-cp37-cp37m-linux_x86_64.whl\n","!apt install git-lfs"]},{"cell_type":"markdown","source":["code ini saya gunakan agar dapat merunning codenya. Kode ini menginstal library dan alat penting untuk proyek NLP (Natural Language Processing) menggunakan Hugging Face. Library yang diinstal mencakup datasets untuk memuat dan memproses dataset, evaluate untuk mengevaluasi performa model, dan transformers untuk bekerja dengan model NLP canggih. accelerate digunakan untuk mempercepat pelatihan model, baik pada GPU maupun TPU. Selain itu, Git LFS diinstal untuk mengelola file besar seperti model atau dataset saat menggunakan Hugging Face Hub. Kode ini juga menyediakan opsi tambahan untuk mengonfigurasi pelatihan pada TPU."],"metadata":{"id":"lX4uP1RGjAUq"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"ot754OAAi8T4","executionInfo":{"status":"ok","timestamp":1735998197751,"user_tz":-420,"elapsed":631,"user":{"displayName":"M.Rizky Fadillah","userId":"02911994023466566780"}}},"outputs":[],"source":["!git config --global user.email \"you@example.com\"\n","!git config --global user.name \"Your Name\""]},{"cell_type":"markdown","source":["Kode ini digunakan untuk mengatur konfigurasi global Git dengan menetapkan email dan nama pengguna. Konfigurasi ini memastikan setiap kontribusi pada repositori Git memiliki identitas yang jelas, memudahkan pelacakan perubahan, dan menjaga keterhubungan dengan platform pengelolaan versi seperti GitHub atau GitLab."],"metadata":{"id":"e6Lm3vGLjJEo"}},{"cell_type":"code","execution_count":3,"metadata":{"id":"NPVJ7NQ2i8T5","colab":{"base_uri":"https://localhost:8080/","height":17,"referenced_widgets":["46530d2e12724c43931dbd5a6f9d73c6","64527e92e75c44d5ad9b0ca15a43e0e9","d027916b72e840589059b8ffcac0e590","b3626200d3c74d4491d97d98a7e04006","a7d472496b7d45218a058f3a912df7b5","68f7083ab99341a297e1941ce34ff649","6e7828aa4bca47969ada8f7237a744c7","ce7123f0880f480494ca77aeb16f4fe7","89b5e9454d914e5d88c6c22c8e29712a","07cb35a6f2de49b2b87681e1c9a9f26e","4a50f0a809a545ee87091e1bb01cc4eb","a31b056c694f4709a5d0af6d80403926","fd5e4127ac9c4ebbb1588fbf01231ed7","933d83705059434d8761557f8165f88f","14491ebef08b4746add01e55e03bc9d0","4e8bce0381c54cf593afac0f6324de74","ddee8ef657ac4a249730b2aafa262e7e","45727f9ec33b4a5eb389c3d4af468c6f","9bd63ff561d842259490a3542f417472","2fa69ecbea2144f5a08ec48afb5e9ad0"]},"executionInfo":{"status":"ok","timestamp":1735998200317,"user_tz":-420,"elapsed":443,"user":{"displayName":"M.Rizky Fadillah","userId":"02911994023466566780"}},"outputId":"1362dca5-ee93-4104-e507-654306e1f62a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["VBox(children=(HTML(value='<center> <img\\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.sv…"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"46530d2e12724c43931dbd5a6f9d73c6"}},"metadata":{}}],"source":["from huggingface_hub import notebook_login\n","\n","notebook_login()"]},{"cell_type":"markdown","source":["Kode ini digunakan untuk autentikasi ke Hugging Face Hub melalui notebook. Dengan menjalankan notebook_login(), pengguna dapat memasukkan token akses mereka untuk mendapatkan izin mengelola model, dataset, dan sumber daya lain di Hugging Face Hub secara langsung dari lingkungan notebook, sehingga mempermudah integrasi dan kolaborasi dalam proyek NLP."],"metadata":{"id":"1FDpQMlgjNzt"}},{"cell_type":"code","source":["from datasets import load_dataset\n","\n","spanish_dataset = load_dataset(\"amazon_reviews_multi\", \"es\")\n","english_dataset = load_dataset(\"amazon_reviews_multi\", \"en\")\n","english_dataset"],"metadata":{"id":"KZI_IE3AjyBb"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Yd1CuvnHi8T6","outputId":"c6f3f878-ea43-4430-cc54-915b1a5d0b33"},"outputs":[{"data":{"text/plain":["'>> Title: Worked in front position, not rear'\n","'>> Review: 3 stars because these are not rear brakes as stated in the item description. At least the mount adapter only worked on the front fork of the bike that I got it for.'\n","\n","'>> Title: meh'\n","'>> Review: Does it’s job and it’s gorgeous but mine is falling apart, I had to basically put it together again with hot glue'\n","\n","'>> Title: Can\\'t beat these for the money'\n","'>> Review: Bought this for handling miscellaneous aircraft parts and hanger \"stuff\" that I needed to organize; it really fit the bill. The unit arrived quickly, was well packaged and arrived intact (always a good sign). There are five wall mounts-- three on the top and two on the bottom. I wanted to mount it on the wall, so all I had to do was to remove the top two layers of plastic drawers, as well as the bottom corner drawers, place it when I wanted and mark it; I then used some of the new plastic screw in wall anchors (the 50 pound variety) and it easily mounted to the wall. Some have remarked that they wanted dividers for the drawers, and that they made those. Good idea. My application was that I needed something that I can see the contents at about eye level, so I wanted the fuller-sized drawers. I also like that these are the new plastic that doesn\\'t get brittle and split like my older plastic drawers did. I like the all-plastic construction. It\\'s heavy duty enough to hold metal parts, but being made of plastic it\\'s not as heavy as a metal frame, so you can easily mount it to the wall and still load it up with heavy stuff, or light stuff. No problem there. For the money, you can\\'t beat it. Best one of these I\\'ve bought to date-- and I\\'ve been using some version of these for over forty years.'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["def show_samples(dataset, num_samples=3, seed=42):\n","    sample = dataset[\"train\"].shuffle(seed=seed).select(range(num_samples))\n","    for example in sample:\n","        print(f\"\\n'>> Title: {example['review_title']}'\")\n","        print(f\"'>> Review: {example['review_body']}'\")\n","\n","\n","show_samples(english_dataset)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yXje447Ji8T6","outputId":"44b82665-79ad-43d4-e79b-f6951dfc5492"},"outputs":[{"data":{"text/plain":["home                      17679\n","apparel                   15951\n","wireless                  15717\n","other                     13418\n","beauty                    12091\n","drugstore                 11730\n","kitchen                   10382\n","toy                        8745\n","sports                     8277\n","automotive                 7506\n","lawn_and_garden            7327\n","home_improvement           7136\n","pet_products               7082\n","digital_ebook_purchase     6749\n","pc                         6401\n","electronics                6186\n","office_product             5521\n","shoes                      5197\n","grocery                    4730\n","book                       3756\n","Name: product_category, dtype: int64"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["english_dataset.set_format(\"pandas\")\n","english_df = english_dataset[\"train\"][:]\n","# Show counts for top 20 products\n","english_df[\"product_category\"].value_counts()[:20]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0RY6DP1vi8T6"},"outputs":[],"source":["def filter_books(example):\n","    return (\n","        example[\"product_category\"] == \"book\"\n","        or example[\"product_category\"] == \"digital_ebook_purchase\"\n","    )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X1Pi8GKni8T7"},"outputs":[],"source":["english_dataset.reset_format()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ADf7X56ri8T7","outputId":"fe7aaff4-cee2-4902-f055-ed051b4aaf87"},"outputs":[{"data":{"text/plain":["'>> Title: I\\'m dissapointed.'\n","'>> Review: I guess I had higher expectations for this book from the reviews. I really thought I\\'d at least like it. The plot idea was great. I loved Ash but, it just didnt go anywhere. Most of the book was about their radio show and talking to callers. I wanted the author to dig deeper so we could really get to know the characters. All we know about Grace is that she is attractive looking, Latino and is kind of a brat. I\\'m dissapointed.'\n","\n","'>> Title: Good art, good price, poor design'\n","'>> Review: I had gotten the DC Vintage calendar the past two years, but it was on backorder forever this year and I saw they had shrunk the dimensions for no good reason. This one has good art choices but the design has the fold going through the picture, so it\\'s less aesthetically pleasing, especially if you want to keep a picture to hang. For the price, a good calendar'\n","\n","'>> Title: Helpful'\n","'>> Review: Nearly all the tips useful and. I consider myself an intermediate to advanced user of OneNote. I would highly recommend.'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["spanish_books = spanish_dataset.filter(filter_books)\n","english_books = english_dataset.filter(filter_books)\n","show_samples(english_books)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_ZGkugQqi8T7","outputId":"91c70bfd-1a8b-413c-92fe-7040f4a76e42"},"outputs":[{"data":{"text/plain":["'>> Title: Easy to follow!!!!'\n","'>> Review: I loved The dash diet weight loss Solution. Never hungry. I would recommend this diet. Also the menus are well rounded. Try it. Has lots of the information need thanks.'\n","\n","'>> Title: PARCIALMENTE DAÑADO'\n","'>> Review: Me llegó el día que tocaba, junto a otros libros que pedí, pero la caja llegó en mal estado lo cual dañó las esquinas de los libros porque venían sin protección (forro).'\n","\n","'>> Title: no lo he podido descargar'\n","'>> Review: igual que el anterior'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["from datasets import concatenate_datasets, DatasetDict\n","\n","books_dataset = DatasetDict()\n","\n","for split in english_books.keys():\n","    books_dataset[split] = concatenate_datasets(\n","        [english_books[split], spanish_books[split]]\n","    )\n","    books_dataset[split] = books_dataset[split].shuffle(seed=42)\n","\n","# Peek at a few examples\n","show_samples(books_dataset)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oaUebORsi8T8"},"outputs":[],"source":["books_dataset = books_dataset.filter(lambda x: len(x[\"review_title\"].split()) > 2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HoCzmgjHi8T8"},"outputs":[],"source":["from transformers import AutoTokenizer\n","\n","model_checkpoint = \"google/mt5-small\"\n","tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sPbNcKi_i8T8","outputId":"db64ad58-143e-4a5e-ae2b-24ec703dd21d"},"outputs":[{"data":{"text/plain":["{'input_ids': [336, 259, 28387, 11807, 287, 62893, 295, 12507, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1]}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["inputs = tokenizer(\"I loved reading the Hunger Games!\")\n","inputs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vekL4drCi8T8","outputId":"b8b002f7-87f2-4994-cc4b-38dfb76fd4b8"},"outputs":[{"data":{"text/plain":["['▁I', '▁', 'loved', '▁reading', '▁the', '▁Hung', 'er', '▁Games', '</s>']"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["tokenizer.convert_ids_to_tokens(inputs.input_ids)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CGnDQNX9i8T9"},"outputs":[],"source":["max_input_length = 512\n","max_target_length = 30\n","\n","\n","def preprocess_function(examples):\n","    model_inputs = tokenizer(\n","        examples[\"review_body\"],\n","        max_length=max_input_length,\n","        truncation=True,\n","    )\n","    labels = tokenizer(\n","        examples[\"review_title\"], max_length=max_target_length, truncation=True\n","    )\n","    model_inputs[\"labels\"] = labels[\"input_ids\"]\n","    return model_inputs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e3x74Xjgi8T9"},"outputs":[],"source":["tokenized_datasets = books_dataset.map(preprocess_function, batched=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BxXrXD1Ii8T9"},"outputs":[],"source":["generated_summary = \"I absolutely loved reading the Hunger Games\"\n","reference_summary = \"I loved reading the Hunger Games\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SZbRYguwi8T9"},"outputs":[],"source":["!pip install rouge_score"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ps7vniUki8T9"},"outputs":[],"source":["import evaluate\n","\n","rouge_score = evaluate.load(\"rouge\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"moiXShf8i8T9","outputId":"a43dc6f0-d1a8-4251-9c45-9b7f3bc9ca62"},"outputs":[{"data":{"text/plain":["{'rouge1': AggregateScore(low=Score(precision=0.86, recall=1.0, fmeasure=0.92), mid=Score(precision=0.86, recall=1.0, fmeasure=0.92), high=Score(precision=0.86, recall=1.0, fmeasure=0.92)),\n"," 'rouge2': AggregateScore(low=Score(precision=0.67, recall=0.8, fmeasure=0.73), mid=Score(precision=0.67, recall=0.8, fmeasure=0.73), high=Score(precision=0.67, recall=0.8, fmeasure=0.73)),\n"," 'rougeL': AggregateScore(low=Score(precision=0.86, recall=1.0, fmeasure=0.92), mid=Score(precision=0.86, recall=1.0, fmeasure=0.92), high=Score(precision=0.86, recall=1.0, fmeasure=0.92)),\n"," 'rougeLsum': AggregateScore(low=Score(precision=0.86, recall=1.0, fmeasure=0.92), mid=Score(precision=0.86, recall=1.0, fmeasure=0.92), high=Score(precision=0.86, recall=1.0, fmeasure=0.92))}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["scores = rouge_score.compute(\n","    predictions=[generated_summary], references=[reference_summary]\n",")\n","scores"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B-l8K2t5i8T-","outputId":"34e5d7b7-c046-40a1-fc99-8e60ce7ae024"},"outputs":[{"data":{"text/plain":["Score(precision=0.86, recall=1.0, fmeasure=0.92)"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["scores[\"rouge1\"].mid"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IvridPCai8T-"},"outputs":[],"source":["!pip install nltk"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-MUySRgni8T-"},"outputs":[],"source":["import nltk\n","\n","nltk.download(\"punkt\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jRlWyJOWi8T-","outputId":"66f4e379-8b42-4a06-f58f-f71111a18187"},"outputs":[{"data":{"text/plain":["'I grew up reading Koontz, and years ago, I stopped,convinced i had \"outgrown\" him.'\n","'Still,when a friend was looking for something suspenseful too read, I suggested Koontz.'\n","'She found Strangers.'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["from nltk.tokenize import sent_tokenize\n","\n","\n","def three_sentence_summary(text):\n","    return \"\\n\".join(sent_tokenize(text)[:3])\n","\n","\n","print(three_sentence_summary(books_dataset[\"train\"][1][\"review_body\"]))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jPWTrNKBi8T-"},"outputs":[],"source":["def evaluate_baseline(dataset, metric):\n","    summaries = [three_sentence_summary(text) for text in dataset[\"review_body\"]]\n","    return metric.compute(predictions=summaries, references=dataset[\"review_title\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a-7JQsHii8T-","outputId":"e61f04ba-a1a9-4201-ee5b-b2bea671d252"},"outputs":[{"data":{"text/plain":["{'rouge1': 16.74, 'rouge2': 8.83, 'rougeL': 15.6, 'rougeLsum': 15.96}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","\n","score = evaluate_baseline(books_dataset[\"validation\"], rouge_score)\n","rouge_names = [\"rouge1\", \"rouge2\", \"rougeL\", \"rougeLsum\"]\n","rouge_dict = dict((rn, round(score[rn].mid.fmeasure * 100, 2)) for rn in rouge_names)\n","rouge_dict"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iVPjLpZDi8T_"},"outputs":[],"source":["from transformers import AutoModelForSeq2SeqLM\n","\n","model = AutoModelForSeq2SeqLM.from_pretrained(model_checkpoint)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YYpP28s0i8T_"},"outputs":[],"source":["from huggingface_hub import notebook_login\n","\n","notebook_login()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YlM7F_BHi8T_"},"outputs":[],"source":["from transformers import Seq2SeqTrainingArguments\n","\n","batch_size = 8\n","num_train_epochs = 8\n","# Show the training loss with every epoch\n","logging_steps = len(tokenized_datasets[\"train\"]) // batch_size\n","model_name = model_checkpoint.split(\"/\")[-1]\n","\n","args = Seq2SeqTrainingArguments(\n","    output_dir=f\"{model_name}-finetuned-amazon-en-es\",\n","    evaluation_strategy=\"epoch\",\n","    learning_rate=5.6e-5,\n","    per_device_train_batch_size=batch_size,\n","    per_device_eval_batch_size=batch_size,\n","    weight_decay=0.01,\n","    save_total_limit=3,\n","    num_train_epochs=num_train_epochs,\n","    predict_with_generate=True,\n","    logging_steps=logging_steps,\n","    push_to_hub=True,\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k5BksdJ2i8T_"},"outputs":[],"source":["import numpy as np\n","\n","\n","def compute_metrics(eval_pred):\n","    predictions, labels = eval_pred\n","    # Decode generated summaries into text\n","    decoded_preds = tokenizer.batch_decode(predictions, skip_special_tokens=True)\n","    # Replace -100 in the labels as we can't decode them\n","    labels = np.where(labels != -100, labels, tokenizer.pad_token_id)\n","    # Decode reference summaries into text\n","    decoded_labels = tokenizer.batch_decode(labels, skip_special_tokens=True)\n","    # ROUGE expects a newline after each sentence\n","    decoded_preds = [\"\\n\".join(sent_tokenize(pred.strip())) for pred in decoded_preds]\n","    decoded_labels = [\"\\n\".join(sent_tokenize(label.strip())) for label in decoded_labels]\n","    # Compute ROUGE scores\n","    result = rouge_score.compute(\n","        predictions=decoded_preds, references=decoded_labels, use_stemmer=True\n","    )\n","    # Extract the median scores\n","    result = {key: value.mid.fmeasure * 100 for key, value in result.items()}\n","    return {k: round(v, 4) for k, v in result.items()}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-oio6QYhi8UA"},"outputs":[],"source":["from transformers import DataCollatorForSeq2Seq\n","\n","data_collator = DataCollatorForSeq2Seq(tokenizer, model=model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SVraoM_1i8UA"},"outputs":[],"source":["tokenized_datasets = tokenized_datasets.remove_columns(\n","    books_dataset[\"train\"].column_names\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1bLQKmNTi8UA","outputId":"1073b95c-1af2-4487-a97e-d23d375070cb"},"outputs":[{"data":{"text/plain":["{'attention_mask': tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","         1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n","        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]), 'input_ids': tensor([[  1494,    259,   8622,    390,    259,    262,   2316,   3435,    955,\n","            772,    281,    772,   1617,    263,    305,  14701,    260,   1385,\n","           3031,    259,  24146,    332,   1037,    259,  43906,    305,    336,\n","            260,      1,      0,      0,      0,      0,      0,      0],\n","        [   259,  27531,  13483,    259,   7505,    260, 112240,  15192,    305,\n","          53198,    276,    259,  74060,    263,    260,    459,  25640,    776,\n","           2119,    336,    259,   2220,    259,  18896,    288,   4906,    288,\n","           1037,   3931,    260,   7083, 101476,   1143,    260,      1]]), 'labels': tensor([[ 7483,   259,  2364, 15695,     1,  -100],\n","        [  259, 27531, 13483,   259,  7505,     1]]), 'decoder_input_ids': tensor([[    0,  7483,   259,  2364, 15695,     1],\n","        [    0,   259, 27531, 13483,   259,  7505]])}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["features = [tokenized_datasets[\"train\"][i] for i in range(2)]\n","data_collator(features)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bnwzF7fYi8UB"},"outputs":[],"source":["from transformers import Seq2SeqTrainer\n","\n","trainer = Seq2SeqTrainer(\n","    model,\n","    args,\n","    train_dataset=tokenized_datasets[\"train\"],\n","    eval_dataset=tokenized_datasets[\"validation\"],\n","    data_collator=data_collator,\n","    tokenizer=tokenizer,\n","    compute_metrics=compute_metrics,\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Yq4wytoli8UB"},"outputs":[],"source":["trainer.train()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8q5nZrmwi8UB","outputId":"63eb10df-bf49-4105-f3e9-96c600fcd028"},"outputs":[{"data":{"text/plain":["{'eval_loss': 3.028524398803711,\n"," 'eval_rouge1': 16.9728,\n"," 'eval_rouge2': 8.2969,\n"," 'eval_rougeL': 16.8366,\n"," 'eval_rougeLsum': 16.851,\n"," 'eval_gen_len': 10.1597,\n"," 'eval_runtime': 6.1054,\n"," 'eval_samples_per_second': 38.982,\n"," 'eval_steps_per_second': 4.914}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["trainer.evaluate()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LERKW-vui8UC"},"outputs":[],"source":["tokenized_datasets.set_format(\"torch\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gswhaz1Wi8UC"},"outputs":[],"source":["model = AutoModelForSeq2SeqLM.from_pretrained(model_checkpoint)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ebsJZRyEi8UD"},"outputs":[],"source":["from torch.utils.data import DataLoader\n","\n","batch_size = 8\n","train_dataloader = DataLoader(\n","    tokenized_datasets[\"train\"],\n","    shuffle=True,\n","    collate_fn=data_collator,\n","    batch_size=batch_size,\n",")\n","eval_dataloader = DataLoader(\n","    tokenized_datasets[\"validation\"], collate_fn=data_collator, batch_size=batch_size\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F1x1clZWi8UD"},"outputs":[],"source":["from torch.optim import AdamW\n","\n","optimizer = AdamW(model.parameters(), lr=2e-5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Izr-Y--Wi8UD"},"outputs":[],"source":["from accelerate import Accelerator\n","\n","accelerator = Accelerator()\n","model, optimizer, train_dataloader, eval_dataloader = accelerator.prepare(\n","    model, optimizer, train_dataloader, eval_dataloader\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pyLxWpUEi8UD"},"outputs":[],"source":["from transformers import get_scheduler\n","\n","num_train_epochs = 10\n","num_update_steps_per_epoch = len(train_dataloader)\n","num_training_steps = num_train_epochs * num_update_steps_per_epoch\n","\n","lr_scheduler = get_scheduler(\n","    \"linear\",\n","    optimizer=optimizer,\n","    num_warmup_steps=0,\n","    num_training_steps=num_training_steps,\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8d99aaIji8UE"},"outputs":[],"source":["def postprocess_text(preds, labels):\n","    preds = [pred.strip() for pred in preds]\n","    labels = [label.strip() for label in labels]\n","\n","    # ROUGE expects a newline after each sentence\n","    preds = [\"\\n\".join(nltk.sent_tokenize(pred)) for pred in preds]\n","    labels = [\"\\n\".join(nltk.sent_tokenize(label)) for label in labels]\n","\n","    return preds, labels"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"svLxDcIFi8UE","outputId":"2d982f64-c54a-48e3-ed38-e0a4764fbdf2"},"outputs":[{"data":{"text/plain":["'lewtun/mt5-finetuned-amazon-en-es-accelerate'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["from huggingface_hub import get_full_repo_name\n","\n","model_name = \"test-bert-finetuned-squad-accelerate\"\n","repo_name = get_full_repo_name(model_name)\n","repo_name"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"noomzvKli8UE"},"outputs":[],"source":["from huggingface_hub import Repository\n","\n","output_dir = \"results-mt5-finetuned-squad-accelerate\"\n","repo = Repository(output_dir, clone_from=repo_name)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UUo3h2eUi8UE","outputId":"f8d4f0dd-eb75-4477-ef76-bceb718a4346"},"outputs":[{"data":{"text/plain":["Epoch 0: {'rouge1': 5.6351, 'rouge2': 1.1625, 'rougeL': 5.4866, 'rougeLsum': 5.5005}\n","Epoch 1: {'rouge1': 9.8646, 'rouge2': 3.4106, 'rougeL': 9.9439, 'rougeLsum': 9.9306}\n","Epoch 2: {'rouge1': 11.0872, 'rouge2': 3.3273, 'rougeL': 11.0508, 'rougeLsum': 10.9468}\n","Epoch 3: {'rouge1': 11.8587, 'rouge2': 4.8167, 'rougeL': 11.7986, 'rougeLsum': 11.7518}\n","Epoch 4: {'rouge1': 12.9842, 'rouge2': 5.5887, 'rougeL': 12.7546, 'rougeLsum': 12.7029}\n","Epoch 5: {'rouge1': 13.4628, 'rouge2': 6.4598, 'rougeL': 13.312, 'rougeLsum': 13.2913}\n","Epoch 6: {'rouge1': 12.9131, 'rouge2': 5.8914, 'rougeL': 12.6896, 'rougeLsum': 12.5701}\n","Epoch 7: {'rouge1': 13.3079, 'rouge2': 6.2994, 'rougeL': 13.1536, 'rougeLsum': 13.1194}\n","Epoch 8: {'rouge1': 13.96, 'rouge2': 6.5998, 'rougeL': 13.9123, 'rougeLsum': 13.7744}\n","Epoch 9: {'rouge1': 14.1192, 'rouge2': 7.0059, 'rougeL': 14.1172, 'rougeLsum': 13.9509}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["from tqdm.auto import tqdm\n","import torch\n","import numpy as np\n","\n","progress_bar = tqdm(range(num_training_steps))\n","\n","for epoch in range(num_train_epochs):\n","    # Training\n","    model.train()\n","    for step, batch in enumerate(train_dataloader):\n","        outputs = model(**batch)\n","        loss = outputs.loss\n","        accelerator.backward(loss)\n","\n","        optimizer.step()\n","        lr_scheduler.step()\n","        optimizer.zero_grad()\n","        progress_bar.update(1)\n","\n","    # Evaluation\n","    model.eval()\n","    for step, batch in enumerate(eval_dataloader):\n","        with torch.no_grad():\n","            generated_tokens = accelerator.unwrap_model(model).generate(\n","                batch[\"input_ids\"],\n","                attention_mask=batch[\"attention_mask\"],\n","            )\n","\n","            generated_tokens = accelerator.pad_across_processes(\n","                generated_tokens, dim=1, pad_index=tokenizer.pad_token_id\n","            )\n","            labels = batch[\"labels\"]\n","\n","            # If we did not pad to max length, we need to pad the labels too\n","            labels = accelerator.pad_across_processes(\n","                batch[\"labels\"], dim=1, pad_index=tokenizer.pad_token_id\n","            )\n","\n","            generated_tokens = accelerator.gather(generated_tokens).cpu().numpy()\n","            labels = accelerator.gather(labels).cpu().numpy()\n","\n","            # Replace -100 in the labels as we can't decode them\n","            labels = np.where(labels != -100, labels, tokenizer.pad_token_id)\n","            if isinstance(generated_tokens, tuple):\n","                generated_tokens = generated_tokens[0]\n","            decoded_preds = tokenizer.batch_decode(\n","                generated_tokens, skip_special_tokens=True\n","            )\n","            decoded_labels = tokenizer.batch_decode(labels, skip_special_tokens=True)\n","\n","            decoded_preds, decoded_labels = postprocess_text(\n","                decoded_preds, decoded_labels\n","            )\n","\n","            rouge_score.add_batch(predictions=decoded_preds, references=decoded_labels)\n","\n","    # Compute metrics\n","    result = rouge_score.compute()\n","    # Extract the median ROUGE scores\n","    result = {key: value.mid.fmeasure * 100 for key, value in result.items()}\n","    result = {k: round(v, 4) for k, v in result.items()}\n","    print(f\"Epoch {epoch}:\", result)\n","\n","    # Save and upload\n","    accelerator.wait_for_everyone()\n","    unwrapped_model = accelerator.unwrap_model(model)\n","    unwrapped_model.save_pretrained(output_dir, save_function=accelerator.save)\n","    if accelerator.is_main_process:\n","        tokenizer.save_pretrained(output_dir)\n","        repo.push_to_hub(\n","            commit_message=f\"Training in progress epoch {epoch}\", blocking=False\n","        )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6bTZ7Mnui8UE"},"outputs":[],"source":["from transformers import pipeline\n","\n","hub_model_id = \"huggingface-course/mt5-small-finetuned-amazon-en-es\"\n","summarizer = pipeline(\"summarization\", model=hub_model_id)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cxjQUU7ci8UF"},"outputs":[],"source":["def print_summary(idx):\n","    review = books_dataset[\"test\"][idx][\"review_body\"]\n","    title = books_dataset[\"test\"][idx][\"review_title\"]\n","    summary = summarizer(books_dataset[\"test\"][idx][\"review_body\"])[0][\"summary_text\"]\n","    print(f\"'>>> Review: {review}'\")\n","    print(f\"\\n'>>> Title: {title}'\")\n","    print(f\"\\n'>>> Summary: {summary}'\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6FXzViSwi8UF","outputId":"3b8d5d23-156a-4c05-ecff-8a3acd03a5f8"},"outputs":[{"data":{"text/plain":["'>>> Review: Nothing special at all about this product... the book is too small and stiff and hard to write in. The huge sticker on the back doesn’t come off and looks super tacky. I would not purchase this again. I could have just bought a journal from the dollar store and it would be basically the same thing. It’s also really expensive for what it is.'\n","\n","'>>> Title: Not impressed at all... buy something else'\n","\n","'>>> Summary: Nothing special at all about this product'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["print_summary(100)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fmtTFKAki8UF","outputId":"e9508a85-48d5-4720-af0d-de5dc3a90779"},"outputs":[{"data":{"text/plain":["'>>> Review: Es una trilogia que se hace muy facil de leer. Me ha gustado, no me esperaba el final para nada'\n","\n","'>>> Title: Buena literatura para adolescentes'\n","\n","'>>> Summary: Muy facil de leer'"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["print_summary(0)"]}],"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/huggingface/notebooks/blob/master/course/en/chapter7/section5_pt.ipynb","timestamp":1735998034385}]},"language_info":{"name":"python"},"kernelspec":{"name":"python3","display_name":"Python 3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"46530d2e12724c43931dbd5a6f9d73c6":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":[],"layout":"IPY_MODEL_6e7828aa4bca47969ada8f7237a744c7"}},"64527e92e75c44d5ad9b0ca15a43e0e9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ce7123f0880f480494ca77aeb16f4fe7","placeholder":"​","style":"IPY_MODEL_89b5e9454d914e5d88c6c22c8e29712a","value":"<center> <img\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.svg\nalt='Hugging Face'> <br> Copy a token from <a\nhref=\"https://huggingface.co/settings/tokens\" target=\"_blank\">your Hugging Face\ntokens page</a> and paste it below. <br> Immediately click login after copying\nyour token or it might be stored in plain text in this notebook file. </center>"}},"d027916b72e840589059b8ffcac0e590":{"model_module":"@jupyter-widgets/controls","model_name":"PasswordModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"PasswordModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"PasswordView","continuous_update":true,"description":"Token:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_07cb35a6f2de49b2b87681e1c9a9f26e","placeholder":"​","style":"IPY_MODEL_4a50f0a809a545ee87091e1bb01cc4eb","value":""}},"b3626200d3c74d4491d97d98a7e04006":{"model_module":"@jupyter-widgets/controls","model_name":"CheckboxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"CheckboxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"CheckboxView","description":"Add token as git credential?","description_tooltip":null,"disabled":false,"indent":true,"layout":"IPY_MODEL_a31b056c694f4709a5d0af6d80403926","style":"IPY_MODEL_fd5e4127ac9c4ebbb1588fbf01231ed7","value":true}},"a7d472496b7d45218a058f3a912df7b5":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Login","disabled":false,"icon":"","layout":"IPY_MODEL_933d83705059434d8761557f8165f88f","style":"IPY_MODEL_14491ebef08b4746add01e55e03bc9d0","tooltip":""}},"68f7083ab99341a297e1941ce34ff649":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4e8bce0381c54cf593afac0f6324de74","placeholder":"​","style":"IPY_MODEL_ddee8ef657ac4a249730b2aafa262e7e","value":"\n<b>Pro Tip:</b> If you don't already have one, you can create a dedicated\n'notebooks' token with 'write' access, that you can then easily reuse for all\nnotebooks. </center>"}},"6e7828aa4bca47969ada8f7237a744c7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":"center","align_self":null,"border":null,"bottom":null,"display":"flex","flex":null,"flex_flow":"column","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"50%"}},"ce7123f0880f480494ca77aeb16f4fe7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89b5e9454d914e5d88c6c22c8e29712a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"07cb35a6f2de49b2b87681e1c9a9f26e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4a50f0a809a545ee87091e1bb01cc4eb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a31b056c694f4709a5d0af6d80403926":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fd5e4127ac9c4ebbb1588fbf01231ed7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"933d83705059434d8761557f8165f88f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14491ebef08b4746add01e55e03bc9d0":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"4e8bce0381c54cf593afac0f6324de74":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ddee8ef657ac4a249730b2aafa262e7e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"45727f9ec33b4a5eb389c3d4af468c6f":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9bd63ff561d842259490a3542f417472","placeholder":"​","style":"IPY_MODEL_2fa69ecbea2144f5a08ec48afb5e9ad0","value":"Connecting..."}},"9bd63ff561d842259490a3542f417472":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2fa69ecbea2144f5a08ec48afb5e9ad0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}